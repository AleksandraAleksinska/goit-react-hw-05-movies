{"version":3,"file":"static/js/135.5a080a85.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/tmdbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"movieDetailsBox\":\"MovieDetails_movieDetailsBox__mNLje\",\"backButton\":\"MovieDetails_backButton__pPF5M\",\"additionalHeader\":\"MovieDetails_additionalHeader__GYxO-\",\"additionalList\":\"MovieDetails_additionalList__0IfAN\",\"additionalListItem\":\"MovieDetails_additionalListItem__NSRDd\",\"additionalLink\":\"MovieDetails_additionalLink__4ZR-w\",\"movieTitle\":\"MovieDetails_movieTitle__0CAOT\",\"active\":\"MovieDetails_active__uPNdW\"};","import React from 'react';\nimport { useState, useEffect, Fragment, Suspense, useRef } from 'react';\nimport { useParams, NavLink, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport css from './MovieDetails.module.css'\n\nimport { getMovieDetails } from 'services/tmdbAPI';\n\n\nconst MovieDetails = () => {\n\n    const { movieId } = useParams();\n    const [ movieDetailsById, setMovieDetailsById ] = useState([]);\n    const [ movieGenres, setMovieGenres ] = useState([]);\n    const [ movieReleaseYear, setMovieReleaseYear ] = useState('');\n    const [ userScore, setUserScore ] = useState(null)\n    \n    const location = useLocation()\n    const navigate = useNavigate();\n    const locationRef = useRef(location);\n\n\n    const goBack = () => {\n      if (location.state?.from) {\n        navigate(location.state.from);\n      } else {\n        navigate(locationRef.current.state.from); \n      } \n    };\n\n    useEffect(() => {\n      const fetchMovieDetails = async () => {\n        try {\n          const movieDetails = await getMovieDetails(movieId);\n          const movieGenres = movieDetails.genres;\n          const movieReleaseYear = movieDetails.release_date;\n          const movieUserScore = movieDetails.vote_average;\n          \n          setMovieDetailsById(movieDetails);\n          setMovieGenres(movieGenres);\n          setMovieReleaseYear(movieReleaseYear);\n          setUserScore(movieUserScore)\n        } \n        catch (error) {\n          console.log(error.message);\n        }\n      };\n  \n      fetchMovieDetails();\n    }, [movieId]);\n      \n\n\n   \n  return (\n      \n    <Fragment>\n       <button className={css.backButton} onClick={goBack} >Go back</button>\n        <div className={css.movieDetailsBox}>\n        {movieDetailsById.poster_path && (\n          <img className={css.movieImg} src={`https://image.tmdb.org/t/p/w500/${movieDetailsById.poster_path}`} alt={movieDetailsById.title} />\n        )}\n          <div>\n            <h2 className={css.movieTitle}>{movieDetailsById.title} ({movieReleaseYear.slice(0,4)})</h2>\n            <p>User score: <b>{Number(userScore).toFixed(2)}</b></p>\n            <h3>Overview</h3>\n            <p>{movieDetailsById.overview}</p>\n           <h4>Genres</h4>\n            {movieGenres.length > 0 ? movieGenres.map((genre) => genre.name).join(' ') : '---'}\n        </div> \n        </div>\n        <div>\n          <p className={css.additionalHeader}>Additional information</p>\n          <ul className={css.additionalList}>\n            <li className={css.additionalListItem}>\n              <NavLink className={(navData) => (navData.isActive ? css.active : css.additionalLink)}to='cast'>Cast</NavLink>\n            </li>\n            <li className={css.additionalListItem}>\n              <NavLink className={(navData) => (navData.isActive ? css.active : css.additionalLink)} to='reviews'>Reviews</NavLink>\n            </li>\n          </ul>\n          <Suspense fallback={<p>'Loading...'</p>}>\n            <Outlet />\n          </Suspense>\n        </div>\n    </Fragment>\n  )\n}\n\nexport default MovieDetails","import axios from 'axios';\n\n\n  const  api_key ='api_key=dce0b8b37fbd78cdab3203c47fa0e91b';\n  const  baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async() => {\n    \n        const response = await axios.get(`${baseURL}trending/movie/day?${api_key}`);\n        const trendingMovies = response.data.results;       \n        return trendingMovies;\n    \n    }      \n\nexport const getMovieDetails = async(movieId) => {\n\n      const response = await axios.get(`${baseURL}movie/${movieId}?${api_key}`);\n      const movieDetails = response.data;\n      return movieDetails;\n}\n\nexport const getMoviesByQuery = async (query) => {\n \n      const response = await axios.get(`${baseURL}search/movie?query=${query}&${api_key}`);\n      const movies = response.data.results;\n      return movies;\n}\n\nexport const getReviews= async(movieId) => {\n\n      const response = await axios.get(`${baseURL}movie/${movieId}/reviews?${api_key}`);\n      const movieReview = response.data.results;\n      return movieReview;\n}\n\nexport const getMovieCast= async(movieId) => {\n\n      const response = await axios.get(`${baseURL}movie/${movieId}/credits?${api_key}`);\n      const movieCast = response.data.cast;\n      return movieCast;\n}"],"names":["movieId","useParams","useState","movieDetailsById","setMovieDetailsById","movieGenres","setMovieGenres","movieReleaseYear","setMovieReleaseYear","userScore","setUserScore","location","useLocation","navigate","useNavigate","locationRef","useRef","useEffect","fetchMovieDetails","getMovieDetails","movieDetails","genres","release_date","movieUserScore","vote_average","console","log","message","Fragment","className","css","onClick","state","from","current","poster_path","src","alt","title","slice","Number","toFixed","overview","length","map","genre","name","join","navData","isActive","to","Suspense","fallback","api_key","baseURL","getTrendingMovies","axios","response","trendingMovies","data","results","getMoviesByQuery","query","movies","getReviews","movieReview","getMovieCast","movieCast","cast"],"sourceRoot":""}