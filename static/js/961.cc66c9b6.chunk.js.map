{"version":3,"file":"static/js/961.cc66c9b6.chunk.js","mappings":"iOAkFA,UA1EqB,WAEjB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkDE,EAAAA,EAAAA,UAAS,IAA3D,eAAQC,EAAR,KAA0BC,EAA1B,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAQG,EAAR,KAAqBC,EAArB,KACA,GAAkDJ,EAAAA,EAAAA,UAAS,IAA3D,eAAQK,EAAR,KAA0BC,EAA1B,KAGMC,GAAWC,EAAAA,EAAAA,MA6BnB,OA1BEC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAe,mCAAG,0GAGR,mCAHQ,SAIGC,EAAAA,EAAAA,IAAA,6CAAgDb,EAAhD,oBADX,qCAHQ,OAIdc,EAJc,OAKdC,EAAeD,EAASE,KACxBX,EAAcS,EAASE,KAAKC,OAC5BV,EAAmBO,EAASE,KAAKE,aAEvCd,EAAoBW,GACpBT,EAAeD,GACfG,EAAoBD,GAXA,kDAepBY,QAAQC,IAAI,KAAMC,SAfE,0DAAH,qDAmBtBT,GACA,GAAE,CAACZ,KAMJ,UAAC,EAAAsB,SAAD,YAEI,mBAAQC,QAhCG,kBAAMd,GAAU,EAAhB,EAgCX,sBAGA,4BACE,gBAAKe,IAAG,0CAAqCrB,EAAiBsB,aAAeC,IAAKvB,EAAiBwB,SACnG,4BACE,0BAAKxB,EAAiBwB,MAAtB,KAA+BpB,EAAiBqB,MAAM,EAAE,GAAxD,QACA,wCAAgBzB,EAAiB0B,eACjC,sCACA,uBAAI1B,EAAiB2B,YACtB,mCACEzB,EAAY0B,OAAS,EAAI1B,EAAY2B,KAAI,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAuBC,KAAK,KAAO,aAGjF,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,SAAU,aAApB,UACE,SAAC,KAAD,WAMX,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, Fragment, Suspense } from 'react';\nimport { useParams, Link, Outlet, useNavigate } from \"react-router-dom\";\n\nimport axios from 'axios';\n\n\n\nconst MovieDetails = () => {\n\n    const { movieId } = useParams();\n    const [ movieDetailsById, setMovieDetailsById ] = useState([]);\n    const [ movieGenres, setMovieGenres ] = useState([]);\n    const [ movieReleaseYear, setMovieReleaseYear ] = useState('');\n    \n  \n    const navigate = useNavigate();\n    const goBack = () => navigate(-1)\n\n    useEffect(() => {\n\n      const getMovieDetails = async() => {\n\n        try {\n          const key = 'dce0b8b37fbd78cdab3203c47fa0e91b';\n          const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`);\n          const movieDetails = response.data;\n          const movieGenres = response.data.genres;\n          const movieReleaseYear = response.data.release_date;\n       \n          setMovieDetailsById(movieDetails);\n          setMovieGenres(movieGenres);\n          setMovieReleaseYear(movieReleaseYear);\n\n        }\n        catch(error) {\n          console.log(error.message)\n        }\n\n      }\n     getMovieDetails() \n    }, [movieId])\n  \n\n   \n  return (\n      \n    <Fragment>\n        \n        <button onClick={goBack}>Go back</button>\n        \n        \n        <div>\n          <img src={`https://image.tmdb.org/t/p/w500/${movieDetailsById.poster_path}`} alt={movieDetailsById.title} />\n          <div>\n            <h2>{movieDetailsById.title} ({movieReleaseYear.slice(0,4)})</h2>\n            <p>User score: {movieDetailsById.popularity}</p>\n            <h3>Overview</h3>\n            <p>{movieDetailsById.overview}</p>\n           <h4>Genres</h4>\n            {movieGenres.length > 0 ? movieGenres.map((genre) => genre.name).join(' ') : '---'}\n        </div> \n        </div>\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to='cast'>Cast</Link>\n            </li>\n            <li>\n              <Link to='reviews'>Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={'Loading...'}>\n            <Outlet />\n          </Suspense>\n        </div>\n\n    </Fragment>\n  )\n}\n\nexport default MovieDetails"],"names":["movieId","useParams","useState","movieDetailsById","setMovieDetailsById","movieGenres","setMovieGenres","movieReleaseYear","setMovieReleaseYear","navigate","useNavigate","useEffect","getMovieDetails","axios","response","movieDetails","data","genres","release_date","console","log","message","Fragment","onClick","src","poster_path","alt","title","slice","popularity","overview","length","map","genre","name","join","to","Suspense","fallback"],"sourceRoot":""}