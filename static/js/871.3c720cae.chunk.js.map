{"version":3,"file":"static/js/871.3c720cae.chunk.js","mappings":"yNA4CA,UAvCgB,WAEd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAQC,EAAR,KAAoBC,EAApB,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAE,sGAGD,mCAHC,SAIUC,EAAAA,EAAAA,IAAA,6CAAgDP,EAAhD,4BADX,qCAHC,OAIPQ,EAJO,OAKPC,EAAcD,EAASE,KAAKC,QAElCP,EAAcK,GAPD,gDAUbG,QAAQC,IAAI,KAAMC,SAVL,yDAAF,qDAchBR,GACA,GAAE,CAACN,KAGF,SAAC,EAAAe,SAAD,WACE,wBACCZ,EAAWa,OAAS,EAAIb,EAAWc,KAAI,SAACC,GACzC,OAAO,2BACL,oCAAYA,EAAOC,WACnB,6BAAKD,EAAOE,aAFEF,EAAOG,GAGf,KAAG,yEAIhB,C","sources":["pages/Reviews/Reviews.jsx"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect, Fragment } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst Reviews = () => {\n\n  const { movieId } = useParams();\n  const [ reviewById, setReviewById ] = useState([]);\n  \n\n  useEffect(() => {\n\n    const getReview= async() => {\n\n      try {\n        const key = 'dce0b8b37fbd78cdab3203c47fa0e91b';\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`);\n        const movieReview = response.data.results;\n      \n        setReviewById(movieReview)\n      }\n      catch(error) {\n        console.log(error.message)\n      }\n\n    }\n   getReview() \n  }, [movieId])\n\n  return (\n    <Fragment>\n      <ul>\n      {reviewById.length > 0 ? reviewById.map((review) => {\n      return <li key={review.id}>\n        <p>Author: {review.author}</p>\n        <p> {review.content}</p>\n        </li>}): <p>'We don't have any reviews for this movie'</p>}\n      </ul>\n    </Fragment>\n  )\n}\n\n\nexport default Reviews"],"names":["movieId","useParams","useState","reviewById","setReviewById","useEffect","getReview","axios","response","movieReview","data","results","console","log","message","Fragment","length","map","review","author","content","id"],"sourceRoot":""}