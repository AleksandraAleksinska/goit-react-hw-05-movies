{"version":3,"file":"static/js/135.ba08c589.chunk.js","mappings":"qPACA,EAA2B,+BAA3B,EAA4E,sC,kBCsF5E,EA9EqB,WAEjB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkDE,EAAAA,EAAAA,UAAS,IAA3D,eAAQC,EAAR,KAA0BC,EAA1B,KACA,GAAwCF,EAAAA,EAAAA,UAAS,IAAjD,eAAQG,EAAR,KAAqBC,EAArB,KACA,GAAkDJ,EAAAA,EAAAA,UAAS,IAA3D,eAAQK,EAAR,KAA0BC,EAA1B,KACA,GAAoCN,EAAAA,EAAAA,UAAS,MAA7C,eAAQO,EAAR,KAAmBC,EAAnB,KAGMC,GAAWC,EAAAA,EAAAA,MAkCnB,OA5BEC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAe,mCAAG,4GAGR,mCAHQ,SAIGC,EAAAA,EAAAA,IAAA,6CAAgDf,EAAhD,oBADX,qCAHQ,OAIdgB,EAJc,OAKdC,EAAeD,EAASE,KACxBb,EAAcW,EAASE,KAAKC,OAC5BZ,EAAmBS,EAASE,KAAKE,aACjCC,EAAiBL,EAASE,KAAKI,aAErClB,EAAoBa,GACpBX,EAAeD,GACfG,EAAoBD,GACpBG,EAAaW,GAbO,kDAiBpBE,QAAQC,IAAI,KAAMC,SAjBE,0DAAH,qDAqBtBX,GACA,GAAE,CAACd,KAMJ,UAAC,EAAA0B,SAAD,YACI,mBAAQC,QApCG,WACbhB,GAAU,EAEX,EAiCG,sBACA,iBAAKiB,UAAWC,EAAhB,UACC1B,EAAiB2B,cAChB,gBAAKF,UAAWC,EAAcE,IAAG,0CAAqC5B,EAAiB2B,aAAeE,IAAK7B,EAAiB8B,SAE5H,4BACE,0BAAK9B,EAAiB8B,MAAtB,KAA+B1B,EAAiB2B,MAAM,EAAE,GAAxD,QACA,yCAAe,uBAAIC,OAAO1B,GAAW2B,QAAQ,SAC7C,sCACA,uBAAIjC,EAAiBkC,YACtB,mCACEhC,EAAYiC,OAAS,EAAIjC,EAAYkC,KAAI,SAACC,GAAD,OAAWA,EAAMC,IAAjB,IAAuBC,KAAK,KAAO,aAGjF,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKX,C","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieImg\":\"MovieDetails_movieImg__5UJtY\",\"movieDetailsBox\":\"MovieDetails_movieDetailsBox__mNLje\"};","import React from 'react';\nimport { useState, useEffect, Fragment, Suspense } from 'react';\nimport { useParams, Link, Outlet, useNavigate } from \"react-router-dom\";\nimport css from './MovieDetails.module.css'\n\nimport axios from 'axios';\n\n\n\nconst MovieDetails = () => {\n\n    const { movieId } = useParams();\n    const [ movieDetailsById, setMovieDetailsById ] = useState([]);\n    const [ movieGenres, setMovieGenres ] = useState([]);\n    const [ movieReleaseYear, setMovieReleaseYear ] = useState('');\n    const [ userScore, setUserScore ] = useState(null)\n    \n  \n    const navigate = useNavigate();\n    const goBack = () => {\n      navigate(-1);\n      \n    }\n\n    useEffect(() => {\n\n      const getMovieDetails = async() => {\n\n        try {\n          const key = 'dce0b8b37fbd78cdab3203c47fa0e91b';\n          const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`);\n          const movieDetails = response.data;\n          const movieGenres = response.data.genres;\n          const movieReleaseYear = response.data.release_date;\n          const movieUserScore = response.data.vote_average;\n       \n          setMovieDetailsById(movieDetails);\n          setMovieGenres(movieGenres);\n          setMovieReleaseYear(movieReleaseYear);\n          setUserScore(movieUserScore)\n\n        }\n        catch(error) {\n          console.log(error.message)\n        }\n\n      }\n     getMovieDetails() \n    }, [movieId])\n  \n\n   \n  return (\n      \n    <Fragment>\n        <button onClick={goBack}>Go back</button>\n        <div className={css.movieDetailsBox}>\n        {movieDetailsById.poster_path && (\n          <img className={css.movieImg} src={`https://image.tmdb.org/t/p/w500/${movieDetailsById.poster_path}`} alt={movieDetailsById.title} />\n        )}\n          <div>\n            <h2>{movieDetailsById.title} ({movieReleaseYear.slice(0,4)})</h2>\n            <p>User score: <b>{Number(userScore).toFixed(2)}</b></p>\n            <h3>Overview</h3>\n            <p>{movieDetailsById.overview}</p>\n           <h4>Genres</h4>\n            {movieGenres.length > 0 ? movieGenres.map((genre) => genre.name).join(' ') : '---'}\n        </div> \n        </div>\n        <div>\n          <p>Additional information</p>\n          <ul>\n            <li>\n              <Link to='cast'>Cast</Link>\n            </li>\n            <li>\n              <Link to='reviews'>Reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<p>'Loading...'</p>}>\n            <Outlet />\n          </Suspense>\n        </div>\n    </Fragment>\n  )\n}\n\nexport default MovieDetails"],"names":["movieId","useParams","useState","movieDetailsById","setMovieDetailsById","movieGenres","setMovieGenres","movieReleaseYear","setMovieReleaseYear","userScore","setUserScore","navigate","useNavigate","useEffect","getMovieDetails","axios","response","movieDetails","data","genres","release_date","movieUserScore","vote_average","console","log","message","Fragment","onClick","className","css","poster_path","src","alt","title","slice","Number","toFixed","overview","length","map","genre","name","join","to","Suspense","fallback"],"sourceRoot":""}