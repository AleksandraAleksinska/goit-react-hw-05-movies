{"version":3,"file":"static/js/278.9de4d516.chunk.js","mappings":"wNAuEA,UAnEe,WACb,IACA,GAAwCA,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAGMC,EAAQL,EAAaM,IAAI,UAAY,GACrCC,GAAmBC,EAAAA,EAAAA,QAAO,IAE1BC,EAAgB,mCAAG,yFACT,KAAVJ,EADmB,0EAGEK,EAAAA,EAAAA,IAAA,0DAC8BL,EAD9B,oBAXf,qCAQa,OAGfM,EAHe,OAMfC,EAASD,EAASE,KAAKC,QAC7BP,EAAiBQ,QAAUH,EAC3BR,EAAiBQ,GARI,kDAUrBI,QAAQC,IAAI,KAAMC,SAVG,0DAAH,qDAoCtB,OAVAC,EAAAA,EAAAA,YAAU,WACRZ,EAAiBQ,QAAUZ,CAC5B,GAAE,CAACA,KAEJgB,EAAAA,EAAAA,YAAU,WACgC,IAApCZ,EAAiBQ,QAAQK,QAC3BX,GAEH,KAGC,UAAC,EAAAY,SAAD,YACE,kBAAMC,SApBW,SAACC,GACpBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfjB,IAEAgB,EAAKE,OACN,EAcG,WACE,kBACEC,KAAK,OACLC,MAAOxB,EACPyB,KAAK,QACLC,SA7Ba,SAACR,GACpBtB,EAAgB,CAAEI,MAAOkB,EAAES,OAAOH,OACnC,KA6BK,mBAAQD,KAAK,SAAb,wBAEF,wBACGrB,EAAiBQ,QAAQkB,KAAI,SAACC,GAAD,OAC5B,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADa,QAQrC,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { useSearchParams, Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const key = 'dce0b8b37fbd78cdab3203c47fa0e91b';\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n \n  \n  const query = searchParams.get('query') || '';\n  const moviesByQueryRef = useRef([]);\n\n  const getMoviesByQuery = async () => {\n    if (query === '') return;\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${key}`\n      );\n      const movies = response.data.results;\n      moviesByQueryRef.current = movies;\n      setMoviesByQuery(movies);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  const handleChange = (e) => {\n    setSearchParams({ query: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    getMoviesByQuery();\n    \n    form.reset();\n  };\n\n  useEffect(() => {\n    moviesByQueryRef.current = moviesByQuery;\n  }, [moviesByQuery]);\n\n  useEffect(() => {\n    if (moviesByQueryRef.current.length === 0) {\n      getMoviesByQuery();\n    }\n  });\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          value={query}\n          name=\"query\"\n          onChange={handleChange}\n        ></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {moviesByQueryRef.current.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default Movies;"],"names":["useSearchParams","searchParams","setSearchParams","useState","moviesByQuery","setMoviesByQuery","query","get","moviesByQueryRef","useRef","getMoviesByQuery","axios","response","movies","data","results","current","console","log","message","useEffect","length","Fragment","onSubmit","e","preventDefault","form","currentTarget","reset","type","value","name","onChange","target","map","movie","to","id","title"],"sourceRoot":""}