{"version":3,"file":"static/js/881.ac0f3bc5.chunk.js","mappings":"oMACA,EAA4B,6BAA5B,EAAyE,iCAAzE,EAAsH,6B,SCoBtH,EAfkB,SAAC,GAAiB,IAAhBA,EAAe,EAAfA,UACVC,GAAWC,EAAAA,EAAAA,MACnB,OACE,SAAC,EAAAC,SAAD,WACA,eAAIC,UAAWC,EAAf,SACGL,EAAUM,KAAI,SAACC,GAAD,OACb,eAAIH,UAAWC,EAAf,UACI,SAAC,KAAD,CAAMD,UAAWC,EAAeG,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMV,GAA1E,SAAwFM,EAAMK,SAD3DL,EAAME,GADhC,OAQpB,C,qIClBD,EAA4B,0BAA5B,EAAqE,6B,kBCgDrE,EA3Ce,WAEb,OAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0CC,EAAAA,EAAAA,UAAS,IAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KAEMC,EAAW,mCAAG,8GAGKC,EAAAA,EAAAA,IAAiBN,EAAaO,IAAI,UAHvC,OAGVC,EAHU,OAIhBJ,EAAiBI,GAJD,gDAOhBC,QAAQC,IAAI,KAAMC,SAPF,yDAAH,qDAwBjB,OALAC,EAAAA,EAAAA,YAAU,WACRZ,EAAaO,IAAI,UAAYF,GAC9B,KAIC,UAAC,EAAAhB,SAAD,YACE,kBAAMC,UAAWC,EAAesB,SAfb,SAACC,GACtBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfhB,EAAgB,CAAEiB,MAAOJ,EAAEK,OAAO,GAAGC,QAErCJ,EAAKK,OACN,EASG,WACE,kBACEC,KAAK,OACLC,KAAK,WAEP,mBAAQjC,UAAWC,EAAiB+B,KAAK,SAAzC,wBAEF,SAACE,EAAA,EAAD,CAAWtC,UAAWiB,MAG3B,C,+LC5CQsB,EAAS,2CACTC,EAAU,gCAGNC,EAAiB,mCAAG,sGAEFC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,8BAA0CD,IAFxC,cAEnBI,EAFmB,OAGnBC,EAAiBD,EAASE,KAAKC,QAHZ,kBAIlBF,GAJkB,2CAAH,qDAQjBG,EAAe,mCAAG,WAAMC,GAAN,yFAEFN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BQ,EAA7B,YAAwCT,IAFtC,cAEnBI,EAFmB,OAGnBM,EAAeN,EAASE,KAHL,kBAIlBI,GAJkB,2CAAH,sDAOf7B,EAAgB,mCAAG,WAAOY,GAAP,yFAEHU,EAAAA,EAAAA,IAAA,UAAaF,EAAb,8BAA0CR,EAA1C,YAAmDO,IAFhD,cAEpBI,EAFoB,OAGpBrB,EAASqB,EAASE,KAAKC,QAHH,kBAInBxB,GAJmB,2CAAH,sDAOhB4B,EAAU,mCAAE,WAAMF,GAAN,yFAEIN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BQ,EAA7B,oBAAgDT,IAFpD,cAEbI,EAFa,OAGbQ,EAAcR,EAASE,KAAKC,QAHf,kBAIZK,GAJY,2CAAF,sDAOVC,EAAY,mCAAE,WAAMJ,GAAN,yFAEEN,EAAAA,EAAAA,IAAA,UAAaF,EAAb,iBAA6BQ,EAA7B,oBAAgDT,IAFlD,cAEfI,EAFe,OAGfU,EAAYV,EAASE,KAAKS,KAHX,kBAIdD,GAJc,2CAAF,qD","sources":["webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx","services/tmdbAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MovieList_movieList__uFrOZ\",\"movieListItem\":\"MovieList_movieListItem__6DqRG\",\"movieLink\":\"MovieList_movieLink__kzavH\"};","import React, { Fragment } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from \"prop-types\";\nimport css from './MovieList.module.css';\n\n\nconst MovieList = ({movieList}) => {\n    const location = useLocation()\n  return (\n    <Fragment>\n    <ul className={css.movieList}>\n      {movieList.map((movie) => \n        <li className={css.movieListItem} key={movie.id}>\n            <Link className={css.movieLink} to={`/movies/${movie.id}`} state={{ from: location }} >{movie.title}</Link>  \n        </li>\n        )}\n    </ul>\n    </Fragment>\n  )\n}\n\nexport default MovieList\n\nMovieList.propTypes ={\n  movieList: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  })),\n  \n}","// extracted by mini-css-extract-plugin\nexport default {\"searchBar\":\"Movies_searchBar__7rhTU\",\"searchButton\":\"Movies_searchButton__ieSHM\"};","import React, { Fragment, useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MovieList from 'components/MovieList/MovieList';\nimport css from './Movies.module.css';\nimport { getMoviesByQuery } from 'services/tmdbAPI';\n\nconst Movies = () => {\n  \n  const [searchParams, setSearchParams] = useSearchParams();\n  const [moviesByQuery, setMoviesByQuery] = useState([]);\n\n  const fetchMovies = async () => {\n\n    try {\n      const movies = await getMoviesByQuery(searchParams.get('query'));\n      setMoviesByQuery(movies);\n    } \n    catch (error) {\n      console.log(error.message);\n    }\n  };\n\n    const handleSubmit = (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: e.target[0].value });   \n    \n    form.reset();\n  };\n\n  useEffect(() => {\n    searchParams.get('query') && fetchMovies()\n  },);\n\n\n  return (\n    <Fragment>\n      <form className={css.searchBar} onSubmit={handleSubmit}>\n        <input \n          type=\"text\"\n          name=\"query\"\n        ></input>\n        <button className={css.searchButton}type=\"submit\">Search</button>\n      </form>\n      <MovieList movieList={moviesByQuery} />\n    </Fragment>\n  );\n};\n\nexport default Movies;","import axios from 'axios';\n\n\n  const  api_key ='api_key=dce0b8b37fbd78cdab3203c47fa0e91b';\n  const  baseURL = 'https://api.themoviedb.org/3/';\n\n\nexport const getTrendingMovies = async() => {\n    \n        const response = await axios.get(`${baseURL}trending/movie/day?${api_key}`);\n        const trendingMovies = response.data.results;       \n        return trendingMovies;\n    \n    }      \n\nexport const getMovieDetails = async(movieId) => {\n\n      const response = await axios.get(`${baseURL}movie/${movieId}?${api_key}`);\n      const movieDetails = response.data;\n      return movieDetails;\n}\n\nexport const getMoviesByQuery = async (query) => {\n \n      const response = await axios.get(`${baseURL}search/movie?query=${query}&${api_key}`);\n      const movies = response.data.results;\n      return movies;\n}\n\nexport const getReviews= async(movieId) => {\n\n      const response = await axios.get(`${baseURL}movie/${movieId}/reviews?${api_key}`);\n      const movieReview = response.data.results;\n      return movieReview;\n}\n\nexport const getMovieCast= async(movieId) => {\n\n      const response = await axios.get(`${baseURL}movie/${movieId}/credits?${api_key}`);\n      const movieCast = response.data.cast;\n      return movieCast;\n}"],"names":["movieList","location","useLocation","Fragment","className","css","map","movie","to","id","state","from","title","useSearchParams","searchParams","setSearchParams","useState","moviesByQuery","setMoviesByQuery","fetchMovies","getMoviesByQuery","get","movies","console","log","message","useEffect","onSubmit","e","preventDefault","form","currentTarget","query","target","value","reset","type","name","MovieList","api_key","baseURL","getTrendingMovies","axios","response","trendingMovies","data","results","getMovieDetails","movieId","movieDetails","getReviews","movieReview","getMovieCast","movieCast","cast"],"sourceRoot":""}