{"version":3,"file":"static/js/620.fd542489.chunk.js","mappings":"sPACA,EAAiC,+BAAjC,EAA+E,6B,SCc/E,EAZe,SAAC,GAAkB,IAAjBA,EAAgB,EAAhBA,WACf,OACE,SAAC,EAAAC,SAAD,UACKD,EAAWE,OAAS,EAAIF,EAAWG,KAAI,SAACC,GAAD,OACvC,gBAAIC,UAAWC,EAAf,WACC,eAAGD,UAAWC,EAAd,qBAAyCF,EAAOG,WAChD,6BAAKH,EAAOI,aAF2BJ,EAAOK,GADR,KAI9B,qEAGjB,EC8BD,EAnCgB,WAEd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAQZ,EAAR,KAAoBa,EAApB,KAsBA,OAnBAC,EAAAA,EAAAA,YAAU,WAER,IAAMC,EAAS,mCAAE,sGAGD,mCAHC,SAIUC,EAAAA,EAAAA,IAAA,6CAAgDN,EAAhD,4BADX,qCAHC,OAIPO,EAJO,OAKPC,EAAcD,EAASE,KAAKC,QAElCP,EAAcK,GAPD,gDAUbG,QAAQC,IAAI,KAAMC,SAVL,yDAAF,qDAchBR,GACA,GAAE,CAACL,KAIA,yBACA,SAAC,EAAD,CAAQV,WAAYA,KAIzB,C","sources":["webpack://react-homework-template/./src/components/Reviews/Review.module.css?8c12","components/Reviews/Review.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviewListItem\":\"Review_reviewListItem__sAVtW\",\"reviewAuthor\":\"Review_reviewAuthor__PgMgM\"};","import React, { Fragment } from 'react';\nimport css from './Review.module.css'\n\nconst Review = ({reviewById}) => {\n  return (\n    <Fragment>\n        {reviewById.length > 0 ? reviewById.map((review) => \n         <li className={css.reviewListItem} key={review.id}>\n          <p className={css.reviewAuthor}>Author: {review.author}</p>\n          <p> {review.content}</p>\n          </li>): <p>We don't have any reviews for this movie</p>}\n    </Fragment>\n  )\n}\n\nexport default Review","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport Review from './Review';\n\n\n\nconst Reviews = () => {\n\n  const { movieId } = useParams();\n  const [ reviewById, setReviewById ] = useState([]);\n  \n\n  useEffect(() => {\n\n    const getReview= async() => {\n\n      try {\n        const key = 'dce0b8b37fbd78cdab3203c47fa0e91b';\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${key}`);\n        const movieReview = response.data.results;\n      \n        setReviewById(movieReview)\n      }\n      catch(error) {\n        console.log(error.message)\n      }\n\n    }\n   getReview() \n  }, [movieId])\n\n  return (\n    \n      <ul>\n      <Review reviewById={reviewById}/>\n      </ul>\n    \n  )\n}\n\n\nexport default Reviews"],"names":["reviewById","Fragment","length","map","review","className","css","author","content","id","movieId","useParams","useState","setReviewById","useEffect","getReview","axios","response","movieReview","data","results","console","log","message"],"sourceRoot":""}